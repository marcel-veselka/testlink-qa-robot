language: python

sudo: true

services:
  - mysql

python:
  - "2.7"

install:
  - pip install robotframework
  - pip install robotframework-selenium2library
  - pip install decorator
  - pip install docutils
  - pip install -U requests
  - pip install -U robotframework-requests
  #- gem install s3
  #- "if [[ ${BROWSER} == 'ie' ]]; then pip install ie_only_pkg; fi"



before_script:

  - "chmod 777 ~/.ssh/known_hosts"
  - "echo $KNOWN_HOSTS >> ~/.ssh/id_rsa.pub"
  - "echo $SSH_KEY > /home/travis/.ssh/key"
  - "cat ~/.ssh/id_rsa.pub > ~/.ssh/authorized_keys"
  - "export DISPLAY=:99.0"
  - "sh -e /etc/init.d/xvfb start"
  - "today=$(date +%Y.%m.%d_%H.%M)"
  #- "find / -type f -perm /6000 -exec stat -c "%A %a %n" {} \"
###
  - sudo apt-get install apache2
  - sudo apt-get install php5 php-pear php5-mysql
  - sudo service apache2 restart
  - ls -l
###

###
  - cd /var/www
###
  - ls -l
###
  - sudo git clone -b testlink_1_9 https://github.com/TestLinkOpenSourceTRMS/testlink-code.git
  - cd testlink-code
  - sudo git checkout 1.9.14

  - ls -l
  - cd ..
  - ls -l

  - sed -e 's/\s\+/\n/g' ~/.ssh/key > ~/.ssh/key1
  - echo -----BEGIN RSA PRIVATE KEY----- > /home/travis/.ssh/id_rsa
  - cat ~/.ssh/key1 >> ~/.ssh/id_rsa
  - echo -----END RSA PRIVATE KEY----- >> /home/travis/.ssh/id_rsa
  - chmod 400 ~/.ssh/id_rsa
  - chmod 600 ~/.ssh/id_rsa
  - echo -e "Host testlab.tesena.com\n\tStrictHostKeyChecking no\n" >> ~/.ssh/config
  - echo " StrictHostKeyChecking no" >> ~/.ssh/config
  - scp -v -i ~/.ssh/id_rsa ubuntu@testlab.tesena.com:/home/ubuntu/travisconfigfile/config_db.inc.php /home/travis/config_db.inc.php
  - sudo cp /home/travis/config_db.inc.php /var/www/testlink-code/config_db.inc.php
  - ls -l
  - cd testlink-code
  - ls -l

  - sudo chown -R www-data:www-data ../testlink-code

  - mysql -u root -e 'CREATE DATABASE testlink_qa CHARACTER SET utf8 COLLATE utf8_general_ci;';
  - mysql -u root testlink_qa < install/sql/mysql/testlink_create_tables.sql;
  - mysql -u root testlink_qa < install/sql/mysql/testlink_create_default_data.sql
  - ls -l
  - sudo rm -f -r install
  - cd ..
###
  #- sudo iptables -A INPUT -p tcp --dport 80 -j ACCEPT
  #- sudo iptables -A INPUT -m state --state NEW -m tcp -p tcp --dport 80 -j ACCEPT
  #- sudo iptables -I INPUT 4 -p tcp -m state --state NEW -m tcp --dport 80 -j ACCEPT
  #- sudo /etc/init.d/iptables save
  #- sudo ifconfig
  #- sudo iptables -F

  #- sudo iptables -P INPUT DROP
  #- sudo iptables -P FORWARD DROP
  #- sudo iptables -P OUTPUT DROP
  #- sudo iptables -A INPUT -i eth0 -p tcp -m multiport --dports 22,80,443 -m state --state NEW,ESTABLISHED -j ACCEPT
  #- sudo iptables -A OUTPUT -o eth0 -p tcp -m multiport --sports 22,80,443 -m state --state ESTABLISHED -j ACCEPT
  #- sudo iptables -A OUTPUT -o eth0 -p tcp --dport 22 -m state --state NEW,ESTABLISHED -j ACCEPT
  #- sudo iptables -A INPUT -i eth0 -p tcp --sport 22 -m state --state ESTABLISHED -j ACCEPT
  #- sudo iptables -A OUTPUT -o eth0 -p tcp --dport 443 -m state --state NEW,ESTABLISHED -j ACCEPT
  #- sudo iptables -A INPUT -i eth0 -p tcp --sport 443 -m state --state ESTABLISHED -j ACCEPT
  #- sudo iptables -A OUTPUT -p udp -o eth0 --dport 53 -j ACCEPT
  #- sudo iptables -A INPUT -p udp -i eth0 --sport 53 -j ACCEPT
  #- sudo iptables -A INPUT -p icmp --icmp-type echo-request -j ACCEPT
  #- sudo iptables -A OUTPUT -p icmp --icmp-type echo-reply -j ACCEPT
  #- sudo iptables -A OUTPUT -p icmp --icmp-type echo-request -j ACCEPT
  #- sudo iptables -A INPUT -p icmp --icmp-type echo-reply -j ACCEPT
  #- sudo iptables -A INPUT -i lo -j ACCEPT
  #- sudo iptables -A OUTPUT -o lo -j ACCEPT
  #- sudo iptables -A FORWARD -i eth0 -o eth1 -j ACCEPT
  #- sudo iptables -A OUTPUT -p udp -o eth0 --dport 53 -j ACCEPT
  #- sudo iptables -A INPUT -p udp -i eth0 --sport 53 -j ACCEPT
  #- cd ~
  #- ls -l
  #- cd ..
  #- ls -l
  #- cd ..
  #- ls -l
  #- cd etc
  #- ls -l
  #- cd apache2
  #- ls -l
  #- sudo cat apache2.conf
  #- sudo cat conf.d
  #- sudo cat hosts.allow
  #- sudo -i
  #- sudo chmod 777 hosts.allow
  #- sudo cat hosts.allow
  #- ls -l
  #- sudo service apache2 stop
  #- sudo sed -i "15i ALL: 192.168.1." hosts.allow
  #- sudo service apache2 start

  #- sudo hostname -I > hosts.allow

  #- echo "ALL: ALLOW" > hosts.allow
  #- sudo cat hosts.allow > /home/travis/build/marcel-veselka/testlink-qa-robot/allow.txt
  #- sudo cat /etc/httpd/conf/httpd.conf
  #- sudo cat /home/travis/build/marcel-veselka/testlink-qa-robot/allow.txt > hosts.allow
  #- sudo cat hosts.allow
  #- ifconfig eth0 | grep inet | awk '{ print $2 }'
  #- sudo hostname -I
  #- sudo wget http://ipinfo.io/ip -qO -

###
  - sudo hostname -I > /home/travis/build/marcel-veselka/testlink-qa-robot/ip.txt
###
  #-sudo ifconfig eth0 | grep inet | awk '{ print $2 }' > /home/travis/build/marcel-veselka/testlink-qa-robot/ip.txt
  #- sudo wget http://ipinfo.io/ip -qO - > /home/travis/build/marcel-veselka/testlink-qa-robot/ip.txt
  #- sudo /sbin/ifconfig |grep -B1 "inet addr" |awk '{ if ( $1 == "inet" ) { print $2 } else if ( $2 == "Link" ) { printf "%s:" ,$1 } }' |awk -F: '{ print $1 ": " $3 }'

###
  - cd /home/travis/build/marcel-veselka/testlink-qa-robot
  - ls -l
###


script:
  #- "firefox --version"
  #- "python test/run_tests.py python $BROWSER --noncritical known_issue_-_travisci"
  #- "python demo/rundemo.py python $BROWSER --noncritical known_issue_-_travisci"
  - pybot -v BROWSER:$BROWSER -v "VALID USER":$TL_USER -v "VALID PASSWD":$TL_PASSWD settings
  #- pybot -v BROWSER:$BROWSER -v "VALID USER":$TL_USER -v "VALID PASSWD":$TL_PASSWD tests/web/TestPlanContents
  #- pybot -v BROWSER:$BROWSER -v "VALID USER":$TL_USER -v "VALID PASSWD":$TL_PASSWD tests/web/requirementsFeature
  #- pybot -v BROWSER:$BROWSER -v "VALID USER":$TL_USER -v "VALID PASSWD":$TL_PASSWD tests/web/testExecution
  #- pybot -v BROWSER:$BROWSER -v "VALID USER":$TL_USER -v "VALID PASSWD":$TL_PASSWD tests/web/Administration
  #- pybot -v BROWSER:$BROWSER -v "VALID USER":$TL_USER -v "VALID PASSWD":$TL_PASSWD tests/web/HomepageUI
  #- pybot -v BROWSER:$BROWSER -v "VALID USER":$TL_USER -v "VALID PASSWD":$TL_PASSWD tests/web/System
  #- pybot -v BROWSER:$BROWSER -v "VALID USER":$TL_USER -v "VALID PASSWD":$TL_PASSWD tests/web/TestPlan
  #- pybot -v BROWSER:$BROWSER -v "VALID USER":$TL_USER -v "VALID PASSWD":$TL_PASSWD tests/web/testSpecification
  #- pybot -v BROWSER:$BROWSER -v "VALID USER":$TL_USER -v "VALID PASSWD":$TL_PASSWD tests/api

env:
  matrix:
  - BROWSER=firefox
  #- BROWSER=ie # will be added later
  #- BROWSER=safari # will be added later

after_script:
   - zip -r build_$today.zip /home/travis/build/marcel-veselka/testlink-qa-robot/log.html
   - zip -r build_$today.zip /home/travis/build/marcel-veselka/testlink-qa-robot/selenium-screenshot-1.png
   - zip -r build_$today.zip /home/travis/build/marcel-veselka/testlink-qa-robot/report.html
   - zip -r build_$today.zip /home/travis/build/marcel-veselka/testlink-qa-robot/allow.txt

   - sed -e 's/\s\+/\n/g' ~/.ssh/key > ~/.ssh/key1
   - echo -----BEGIN RSA PRIVATE KEY----- > /home/travis/.ssh/id_rsa
   - cat ~/.ssh/key1 >> ~/.ssh/id_rsa
   - echo -----END RSA PRIVATE KEY----- >> /home/travis/.ssh/id_rsa
   - chmod 400 ~/.ssh/id_rsa
   - chmod 600 ~/.ssh/id_rsa

   - echo -e "Host testlab.tesena.com\n\tStrictHostKeyChecking no\n" >> ~/.ssh/config
   - echo " StrictHostKeyChecking no" >> ~/.ssh/config

   - scp -v -i ~/.ssh/id_rsa /home/travis/build/marcel-veselka/testlink-qa-robot/build_$today.zip ubuntu@testlab.tesena.com:/home/ubuntu/reports/
# todo: upload instead of individual files info s3 bucket

addons:
  artifacts:
    bucket: "tesena-s3"
    endpoint: "tesena-s3.s3-website-us-west-2.amazonaws.com"
    s3_region: "us-west-2" # defaults to "us-east-1"
